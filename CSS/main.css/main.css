/*! normalize.scss v0.1.0 | MIT License | based on git.io/normalize */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden],template{display:none}a{background-color:transparent}a:active,a:hover{outline:0}abbr[title]{border-bottom:1px dotted}b,strong{font-weight:700}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-.5em}sub{bottom:-.25em}img{border:0}svg:not(:root){overflow:hidden}figure{margin:1em 40px}hr{-webkit-box-sizing:content-box;box-sizing:content-box;height:0}pre{overflow:auto}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}button{overflow:visible}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}input{line-height:normal}input[type=checkbox],input[type=radio]{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0}input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{height:auto}input[type=search]{-webkit-appearance:textfield;-webkit-box-sizing:content-box;box-sizing:content-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{border:0;padding:0}textarea{overflow:auto}optgroup{font-weight:700}td,th{padding:0}@font-face{font-family:gagalinregular;src:url(../../fonts/webfontkit-20181031-092245/gagalin-regular-webfont.woff2) format("woff2"),url(../../fonts/webfontkit-20181031-092245/gagalin-regular-webfont.woff) format("woff");font-weight:400;font-style:normal}@font-face{font-family:lifehackmedium;src:url(../../fonts/webfontkit-20181031-092245/lifehack_medium-webfont.woff2) format("woff2"),url(../../fonts/webfontkit-20181031-092245/lifehack_medium-webfont.woff) format("woff");font-weight:400;font-style:normal}@font-face{font-family:ubunturegular;src:url(../../fonts/webfontkit-20181031-092245/ubuntu-regular-webfont.woff2) format("woff2"),url(../../fonts/webfontkit-20181031-092245/ubuntu-regular-webfont.woff) format("woff");font-weight:400;font-style:normal}@font-face{font-family:ubuntulight;src:url(../../fonts/webfontkit-20181031-092245/ubuntu-light-webfont.woff2) format("woff2"),url(../../fonts/webfontkit-20181031-092245/ubuntu-light-webfont.woff) format("woff");font-weight:400;font-style:normal}@font-face{font-family:ubuntumedium;src:url(../../fonts/webfontkit-20181031-092245/ubuntu-medium-webfont.woff2) format("woff2"),url(../../fonts/webfontkit-20181031-092245/ubuntu-medium-webfont.woff) format("woff");font-weight:400;font-style:normal}@font-face{font-family:ubuntubold;src:url(../../fonts/webfontkit-20181031-092245/ubuntu-b-webfont.woff2) format("woff2"),url(../../fonts/webfontkit-20181031-092245/ubuntu-b-webfont.woff) format("woff");font-weight:400;font-style:normal}html{font-size:1rem}@media screen and (max-width:768px){html{font-size:.9375rem}}@media screen and (max-width:480px){html{font-size:.8125rem}}body,html{height:100%}body{font-size:1rem;line-height:1.42;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;position:relative}.section{height:100%;min-height:40.625rem;overflow:hidden}.container,.section_centered{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.container{margin:0 auto;width:95%;max-width:58.75rem;height:100%;position:relative}@media screen and (max-width:768px){.container{width:95%}}.container_without-align{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.wrapper{position:relative;overflow:hidden;height:100%;width:100%}.maincontent{height:100vh;-webkit-transform:translateY(0);transform:translateY(0);-webkit-transition:2s;transition:2s}h1,h2,h3,h4,h5,h6{margin-top:0;font-weight:400}table{border-collapse:collapse;border-spacing:0}ul{padding:0;margin:0}ul li{list-style:none}p{padding:0;margin:0}*{-webkit-box-sizing:border-box;box-sizing:border-box}.section-title{margin-bottom:2.5rem}.section-title_color_black{color:#0f0f0f}.button{padding:.625rem .9375rem;background:#e35028;color:#fff;text-decoration:none;border-radius:.3125rem;font-family:ubuntumedium;font-size:.8125rem;text-transform:uppercase;letter-spacing:.06875rem;cursor:pointer;margin-left:.9375rem;outline:none;border:none}.button:hover{background:#c1401e}.button_bg-black{background:#1f2122}.button_bg-black:hover{background:#44474a}.button_transparent,.button_transparent:hover{background:transparent}.button_mg-0{margin-left:0}@media screen and (max-width:480px){.buttonfirst{display:none}}.buttonsecond{display:none}@media screen and (max-width:480px){.buttonsecond{display:block}}.fixed-menu{position:fixed;top:5rem;right:2.8125rem;z-index:3}@media screen and (max-width:768px){.fixed-menu{display:none}}@media screen and (max-width:480px){.fixed-menu{display:none}}.fixed-menu__item{margin-bottom:.625rem}.fixed-menu__item.active .fixed-menu__link{border-color:#fff}.fixed-menu__link{width:1rem;height:1rem;border-radius:50%;position:relative;display:block;border:.0625rem solid transparent}.fixed-menu__link:hover{border-color:#fff}.fixed-menu__link:before{content:"";display:block;width:.375rem;height:.375rem;border-radius:50%;background:#fff;position:absolute;top:50%;left:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}.section-title{font-family:gagalinregular;font-size:4.5rem;color:#f9b43b;margin-bottom:0;letter-spacing:.1125rem;text-transform:uppercase;line-height:4rem}@media screen and (max-width:768px){.section-title{font-size:4.25rem;margin-bottom:1.125rem}}@media screen and (max-width:480px){.section-title{font-size:4rem;margin-bottom:.625rem}}.section-title_color_black{color:#2f3234}.section-title_mb55{margin-bottom:3.4375rem}@media screen and (max-width:768px){.section-title_mb55{margin-bottom:2.1875rem}}@media screen and (max-width:480px){.section-title_mb55{margin-bottom:.9375rem}}.section-title_color_white{color:#fff}.section-title_position_center{text-align:center}.section-title_color_red{color:#e35028}.section-title_fs14{font-size:.875rem}.section-title_fs36{font-size:2.25rem}@media screen and (max-width:480px){.section-title_burger{font-size:3.125rem;line-height:1.1}}.section-title_bigmenu{font-size:1.5625rem}.section-title_lh0{line-height:0}.section-title_kkal{font-size:1.125rem;line-height:1.8;margin-top:-70%;color:#f9d19d;text-transform:none}@media screen and (max-width:768px){.section-title_kkal{margin-left:.625rem}}@media screen and (max-width:480px){.section-title_kkal{margin-left:.9375rem}}.title-name{font-family:gagalinregular;color:#fff;font-size:.875rem;margin-bottom:1.5625rem;position:relative}@media screen and (max-width:768px){.title-name{margin-bottom:0}}@media screen and (max-width:480px){.title-name{font-size:1.5rem;text-align:center}}.welcome{background-image:url(../../pictures/texture.png);background-size:cover;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;position:relative;overflow:hidden;width:100%;height:100vh}.welcome__video{min-width:100%;min-height:100%;z-index:-1}.header,.welcome__video{position:absolute;top:0;left:0}.header{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center;min-height:5.5rem;width:100%;padding-top:.75rem}.header_fullmenu .header{padding-right:4.0625rem}.header_fullmenu .menu__list{display:-webkit-box;display:-ms-flexbox;display:flex;position:fixed;top:0;left:0;width:100%;height:100%;background-color:rgba(47,50,52,.99);z-index:99;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.header_fullmenu .menu__item,.header_fullmenu .menu__list{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.header_fullmenu .menu__item{margin-left:0}.header_fullmenu .menu__item:before{margin-right:0}.header_fullmenu .menu__item:after{margin:1.125rem 0}.header_fullmenu .menu__item:nth-child(6){display:none}.header_fullmenu .humburger__item:nth-child(2){opacity:0}.header_fullmenu .humburger__item:first-child{-webkit-transform:rotate(45deg) translateY(12px);transform:rotate(45deg) translateY(12px);background-color:#c1c2c2}.header_fullmenu .humburger__item:nth-child(3){-webkit-transform:rotate(-45deg) translateY(-12px);transform:rotate(-45deg) translateY(-12px);background-color:#c1c2c2}.header_fullmenu .menu__link{font-family:ubunturegular;font-size:1.5rem;line-height:2.5rem}.header_fullmenu .logo-icon{display:-webkit-box;display:-ms-flexbox;display:flex;position:fixed;top:.75rem;left:1.25rem;z-index:100}.logo-icon{width:6.14156rem;height:4.64481rem}.header__buttons{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.humburger{width:1.5625rem;cursor:pointer;margin-left:1.875rem;margin-right:1.25rem;margin-top:.3125rem;display:none;top:2.125rem;right:.9375rem;z-index:100}@media screen and (max-width:768px){.humburger{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}}.humburger__item{height:4px;margin-bottom:.3125rem;border-radius:.25rem;background-color:#fff;-webkit-transition:.8s;transition:.8s}.humburger__item:last-child{margin-bottom:0}.welcome__container{-webkit-box-flex:1;-ms-flex:1;flex:1;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.welcome__container,.welcome__content{display:-webkit-box;display:-ms-flexbox;display:flex}.welcome__content{-webkit-box-flex:.75;-ms-flex:.75;flex:.75;-webkit-box-align:center;-ms-flex-align:center;align-items:center}@media screen and (max-width:768px){.welcome__content{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;height:100%;padding:0 17%;-webkit-box-flex:0.8;-ms-flex:0.8;flex:0.8}}@media screen and (max-width:480px){.welcome__content{-webkit-box-flex:0.9;-ms-flex:0.9;flex:0.9;padding:0}}.menu__list{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row}@media screen and (max-width:768px){.menu__list{display:none}}.menu__link{color:#fff;text-decoration:none;font-family:ubuntumedium;font-size:.8125rem;letter-spacing:1.1;text-transform:uppercase;cursor:pointer}.menu__item{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.menu__item:after{content:"";display:block;width:.25rem;height:.25rem;border-radius:50%;background:#fff;margin:0 .9375rem}.menu__item:last-child:after{display:none}.welcome__picture{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;width:50%;margin-right:.9375rem;position:relative}@media screen and (max-width:768px){.welcome__picture{-webkit-box-align:center;-ms-flex-align:center;align-items:center;width:100%;margin-right:0}}@media screen and (max-width:768px){.welcome__burger-img{margin-left:0;width:80%}}@media screen and (max-width:480px){.welcome__burger-img{width:65%}}.welcome__drops-img{position:absolute;top:16%;left:-1%}@media screen and (max-width:768px){.welcome__drops-img{top:16%;left:3%;max-width:90%}}@media screen and (max-width:480px){.welcome__drops-img{top:14%;left:13%;max-width:70%;position:absolute}}.welcome__text{padding-top:3.75rem;width:50%}@media screen and (max-width:768px){.welcome__text{width:100%;padding-top:1.5625rem;text-align:center}}.welcome__desc{font-family:lifehackmedium;color:#fff;font-size:3.625rem;line-height:3.75rem}@media screen and (max-width:768px){.welcome__desc{font-size:3.625rem;text-align:center}}.to-next-section{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-item-align:center;align-self:center;margin-bottom:3.75rem;cursor:pointer}@media screen and (max-width:768px){.to-next-section{margin-bottom:35px}}@media screen and (max-width:480px){.to-next-section{margin-bottom:30px}}.arrow-down{width:100%;height:100%}.best{background:url(../../pictures/bgone.jpg) 50% no-repeat;background-size:cover}@media screen and (max-width:768px){.best{background:url(../../pictures/bgone-tablets.jpg) 50% no-repeat;background-size:cover}}@media screen and (max-width:480px){.best{background:url(../../pictures/bgone-phones.jpg) 50% no-repeat;background-size:cover}}.best__list{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}@media screen and (max-width:480px){.best__list{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}}.best__item{width:18.75rem;text-align:center}@media screen and (max-width:480px){.best__item{display:-webkit-box;display:-ms-flexbox;display:flex;width:100%;text-align:left;margin-bottom:3.125rem}}.best__img{min-height:6.25rem;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;margin-bottom:1.5625rem}@media screen and (max-width:480px){.best__img{width:20%}}.best__icon-meat{width:6.02675rem;height:5.57787rem}.best__icon-hand{width:4.5625rem;height:5.36719rem}.best__icon-natural{width:5.5rem;height:4.72088rem}@media screen and (max-width:480px){.best__desc{margin-left:23px;width:75%}}.best__title{font-family:lifehackmedium;font-size:1.5rem;color:#000;margin-bottom:1.25rem}.best__words{font-family:ubuntulight;font-size:.75rem;color:#6c6c6d;line-height:1.8;margin:0}.burgers{position:relative;background:#f9b43b;background:-webkit-gradient(linear,left bottom,left top,from(#f9b43b),color-stop(50%,#eb8c38),to(#f9b43b));background:linear-gradient(0deg,#f9b43b,#eb8c38 50%,#f9b43b)}.slider{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;width:100%}@media screen and (max-width:768px){.slider{height:100%}}.slider__wrap{-webkit-box-flex:1;-ms-flex:1;flex:1;overflow:hidden}@media screen and (max-width:768px){.slider__wrap{height:80%}}.slider__control{position:relative;z-index:1;display:-webkit-box;display:-ms-flexbox;display:flex;cursor:pointer}.to-prev-burger{left:-1.4375rem}@media screen and (max-width:768px){.to-prev-burger{left:1.375rem}}@media screen and (max-width:480px){.to-prev-burger{left:0;position:absolute}}.to-next-burger{right:-1.4375rem}@media screen and (max-width:768px){.to-next-burger{right:1.375rem}}@media screen and (max-width:480px){.to-next-burger{right:0;position:absolute}}.slider__list{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-transition:1s;transition:1s}@media screen and (max-width:768px){.slider__list{height:100%}}.slider__burgers-info{display:-webkit-box;display:-ms-flexbox;display:flex;overflow:hidden;-webkit-box-flex:1;-ms-flex:1;flex:1;margin-left:1.5625rem}@media screen and (max-width:768px){.slider__burgers-info{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center;height:100%;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}}@media screen and (max-width:480px){.slider__burgers-info{padding:0;margin-left:0}}.burgers-pic{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;position:relative}@media screen and (max-width:768px){.burgers-pic{margin-bottom:1.5625rem;width:31.5625rem;height:17.5rem}}@media screen and (max-width:480px){.burgers-pic{margin-bottom:0;padding-top:3.4375rem;width:auto}}.burgers-pic__item{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}@media screen and (max-width:768px){.burgers__item{width:85%;height:100%}}@media screen and (max-width:480px){.burgers__item{width:60%}}.burgers-pic__consist{position:absolute;top:0;left:0;background:#f08c33;height:5.625rem;width:5.625rem;border-radius:.25rem;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:space-evenly;-ms-flex-pack:space-evenly;justify-content:space-evenly;cursor:pointer}@media screen and (max-width:768px){.burgers-pic__consist{top:-4.375rem;left:1.5rem}}@media screen and (max-width:480px){.burgers-pic__consist{top:0;left:1.25rem}}.burgers-pic__consist_active{background:#e35028;cursor:pointer}.burgers-pic__consist_active .burgers-pic__drop{right:-16rem;z-index:3}@media screen and (max-width:768px){.burgers-pic__consist_active .burgers-pic__drop{right:-295px}}@media screen and (max-width:480px){.burgers-pic__consist_active .burgers-pic__drop{right:-256px}}.burgers-pic__drop{background:url(../../pictures/bg-drop.png);border-radius:.25rem;padding:1.25rem;position:absolute;top:0;right:-9999px;display:-webkit-box;display:-ms-flexbox;display:flex}.burgers-pic__drop .burgers__list{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.burgers-pic__drop .burgers__item{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;margin-bottom:.625rem}@media screen and (max-width:768px){.burgers-pic__drop .burgers__item{width:14.6875rem}}.burgers-pic__drop .burgers__item:last-child{margin-bottom:0}.burgers-pic__drop .beef-icon{width:2.75rem;height:2.45075rem}.burgers-pic__drop .buns-icon{max-width:3rem;max-height:1.89481rem}.burgers-pic__drop .salad-icon{width:2.375rem;height:2.41487rem}.burgers-pic__drop .sauce-icon{width:2.51181rem;height:2.7135rem}.burgers-pic__drop .cucumber-icon{width:2.625rem;height:2.35962rem}.burgers-pic__drop .cheese-icon{width:2.38287rem;height:2.13362rem}.burgers-pic__drop .burgers__item-text{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;margin-left:.625rem;width:10rem;font-family:ubuntulight;font-size:.875rem}.burgers-pic__drop .burgers__item-name{font-family:ubuntumedium}.burgers-pic__drop .dagger{width:20px;height:20px;cursor:pointer;display:none}@media screen and (max-width:768px){.burgers-pic__drop .dagger{display:-webkit-box;display:-ms-flexbox;display:flex;padding-left:1.25rem;padding-right:1.25rem}}.burgers-pic__kkal{position:absolute;bottom:0;left:0;height:5rem;width:3.75rem}@media screen and (max-width:768px){.burgers-pic__kkal{top:-4.375rem;right:2.3125rem;left:auto}}@media screen and (max-width:480px){.burgers-pic__kkal{top:0;right:1.875rem}}.burgers-desc{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}@media screen and (max-width:768px){.burgers-desc{text-align:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:0 12%}}@media screen and (max-width:480px){.burgers-desc{padding:0 4%}}.burgers-desc__text{font-family:ubuntulight;font-size:.875rem;color:#fff;line-height:1.8;margin-bottom:2.1875rem}@media screen and (max-width:480px){.burgers-desc__text{margin-bottom:.125rem}}.burges-desc__price{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:baseline;-ms-flex-align:baseline;align-items:baseline}.team{background-image:url(../../pictures/team.jpg);background-repeat:no-repeat;background-size:cover;position:relative}.team__info{position:absolute;height:100%;background-image:url(../../pictures/team-bg.png);right:0;top:0;padding:6.875rem 0 0 5.625rem;width:50%}@media screen and (max-width:768px){.team__info{width:100%;text-align:center;padding:0}}@media screen and (max-width:768px){.team__desc,.team__info{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.team__desc{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center}}.team-acco{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:start;-ms-flex-align:start;align-items:flex-start}@media screen and (max-width:768px){.team-acco{-webkit-box-align:center;-ms-flex-align:center;align-items:center;width:100%}}.team-acco__member{margin-bottom:2.5rem}@media screen and (max-width:768px){.team-acco__member{width:100%;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center}}.team-acco__member_active .title-name_team-acco{color:#f9b43b}.team-acco__member_active .title-name_team-acco:before{-webkit-transform:rotate(-180deg);transform:rotate(-180deg)}.team-acco__wrap{height:0;overflow:hidden;-webkit-transition:1s;transition:1s}.title-name_team-acco{display:-webkit-box;display:-ms-flexbox;display:flex;margin-bottom:1.25rem}@media screen and (max-width:768px){.title-name_team-acco{font-size:1.5rem}}.title-name_team-acco:before{content:"";display:block;border:.25rem solid transparent;border-top:.3125rem solid #f9b43b;position:absolute;top:.375rem;left:-1.0625rem;-webkit-transition:.5s;transition:.5s}@media screen and (max-width:768px){.title-name_team-acco:before{top:33%}}@media screen and (max-width:480px){.title-name_team-acco:before{top:35%}}.team-acco__member-data{display:-webkit-box;display:-ms-flexbox;display:flex}@media screen and (max-width:768px){.team-acco__member-data{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center;width:100%}}.team-acco__member-photo{width:6.25rem;height:6.25rem;overflow:hidden;border-radius:50%}@media screen and (max-width:768px){.team-acco__member-photo{margin-bottom:1.25rem}}.team-acco__icon{width:100%;height:100%;display:-webkit-box;display:-ms-flexbox;display:flex}.team-acco__member-desc{font-size:.875rem;color:#fff;margin-left:1.25rem;line-height:1.5rem;max-width:13.125rem;font-family:ubuntulight}@media screen and (max-width:768px){.team-acco__member-desc{margin-left:0;min-width:100%}}@media screen and (max-width:480px){.team-acco__member-desc{min-width:90%}}.team-acco__position{font-family:ubuntubold;margin-bottom:.3125rem}.bigmenu{background-image:url(../../pictures/bg-menu.jpg);background-repeat:no-repeat;background-size:cover;position:relative}.bigmenu__name{position:absolute;top:6.875rem;left:2.8125rem}.bigmenu__pages{position:absolute;top:0;right:0;display:-webkit-box;display:-ms-flexbox;overflow:hidden;height:100%;display:flex}@media screen and (max-width:480px){.bigmenu__pages{width:100%;-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end}}.bigmenu__page{display:-webkit-box;display:-ms-flexbox;display:flex;position:relative}.bigmenu__page_active{width:100%;height:100%;top:0;left:0;z-index:1}@media screen and (max-width:480px){.bigmenu__page_active{position:absolute;top:0;left:0;height:100%;z-index:1}}.bigmenu__page_active .bigmenu__trigger span{color:#f9b43b}.bigmenu__page_active .bigmenu__wrap{-webkit-box-flex:1;-ms-flex:1;flex:1;width:33.75rem}@media screen and (max-width:768px){.bigmenu__page_active .bigmenu__wrap{width:36.25rem}}@media screen and (max-width:480px){.bigmenu__page_active .bigmenu__wrap{width:100%}}.bigmenu__page_active .cross-block{display:none}@media screen and (max-width:480px){.bigmenu__page_active .cross-block{display:block}}.bigmenu__wrap{width:0;overflow:hidden;-webkit-transition:.6s;transition:.6s}@media screen and (max-width:480px){.bigmenu__wrap{-webkit-transition:0s;transition:0s;position:relative}}.bigmenu__trigger{-webkit-box-align:end;-ms-flex-align:end;align-items:flex-end;background-repeat:no-repeat;background-size:cover;background-position:50%;max-width:5rem;padding-bottom:2.8125rem;text-decoration:none}.bigmenu__trigger,.bigmenu__trigger span{display:-webkit-box;display:-ms-flexbox;display:flex}.bigmenu__trigger span{font-size:2.5rem;font-family:gagalinregular;color:#fff;-webkit-transform:rotate(-90deg);transform:rotate(-90deg);white-space:nowrap;width:100%}.bigmenu__desc{background-color:rgba(47,50,52,.93);height:100%;padding:3.875rem 2.3125rem 3.875rem 2.0625rem;line-height:1.5rem;min-width:100%;color:#fff}.bigmenu__item{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;width:28.75rem}@media screen and (max-width:480px){.bigmenu__item{width:270px}}.cross-block{width:1.25rem;height:1.25rem;position:absolute;right:1.875rem;top:1.875rem;display:none;cursor:pointer}.cross{height:100%;width:100%}.reviews{position:relative;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.reviews,.reviews__list{display:-webkit-box;display:-ms-flexbox;display:flex}.reviews__list{height:100%;-ms-flex-wrap:wrap;flex-wrap:wrap}.reviews__item{width:25%;height:50%;background-size:cover;background-position:50%;background-repeat:no-repeat;-webkit-filter:grayscale(100%);filter:grayscale(100%)}@media screen and (max-width:768px){.reviews__item{width:50%;height:25%}}.reviews__item:hover .reviews__hover{opacity:1}.reviews__hover{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;height:100%;padding:15% 9%;background:rgba(69,69,69,.7);opacity:0;-webkit-transition:1s;transition:1s}@media screen and (max-width:768px){.reviews__hover{padding:0 10%;-webkit-box-align:center;-ms-flex-align:center;align-items:center}}@media screen and (max-width:480px){.reviews__hover{padding:0 16%}}.reviews__text{font-family:ubuntulight;font-size:.875rem;line-height:1.5rem;margin-bottom:1.25rem;color:#fff;text-overflow:ellipsis;overflow:hidden;display:inline-block;white-space:normal}@media screen and (max-width:768px){.reviews__text{text-align:center;font-size:.75rem;margin-bottom:.625rem}}@media screen and (max-width:480px){.reviews__text{height:0;opacity:0}}.reviews__popup{width:28.75rem;height:15.9375rem;background-color:#fff;padding:1.25rem;border-radius:.4375rem;display:none}.reviews__popup_active{position:absolute;top:35%;z-index:10}.reviews__popup-info,.reviews__popup_active{display:-webkit-box;display:-ms-flexbox;display:flex}.reviews__popup-info{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;text-align:left}.reviews__popup-cross{position:absolute;top:1.25rem;right:1.25rem}.reviews__popup-header{font-family:gagalinregular;color:#000;font-size:.875rem;margin-bottom:1.5625rem}.reviews__popup-text{font-family:ubuntulight;font-size:.875rem;line-height:1.5rem;color:#000}.video{background-image:url(../../pictures/bg-video.jpg);background-size:cover;background-repeat:no-repeat}.player{-webkit-box-align:center;-ms-flex-align:center;align-items:center;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}@media screen and (max-width:480px){.player{position:relative;overflow:hidden}}.player__video{height:370px;width:100%;max-width:41.25rem}.player__controls{display:-webkit-box;display:-ms-flexbox;display:flex;height:35px;width:41.125rem;background-color:#3e3e3e;-webkit-box-pack:space-evenly;-ms-flex-pack:space-evenly;justify-content:space-evenly;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.player__start{width:0;height:0;padding:0;border-color:transparent transparent transparent #626262;border-style:solid;border-width:11px 0 11px 11px;background:transparent;cursor:pointer;outline:none}.player__start.paused{width:.875rem;height:15px;border:.3125rem solid #626262;border-top:none;border-bottom:none}#progress{width:27.875rem}@media screen and (max-width:480px){#progress{width:24.125rem}}#total{width:100%;background:#999;margin:0;padding:0;display:-webkit-box;display:-ms-flexbox;display:flex;height:4px}#buffered{background:#ccc}#current{line-height:0;height:100%;position:relative}#current,#current:before{display:-webkit-box;display:-ms-flexbox;display:flex}#current:before{content:"";height:10px;width:10px;border-radius:50%;background-color:#626262;position:absolute;top:-3px;-webkit-transform:translateX(50%);transform:translateX(50%);right:0}.player__volume{cursor:pointer;display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;background:transparent;border:none}@media screen and (max-width:480px){.player__volume{right:9.0625rem}}.player__volumeline{display:-webkit-box;display:-ms-flexbox;display:flex}#volume-bar{width:4.6875rem}input[type=range]{-webkit-appearance:none;width:100%;margin:3px 0}input[type=range]:focus{outline:none}input[type=range]::-webkit-slider-runnable-track{width:100%;height:4px;cursor:pointer;-webkit-box-shadow:0 0 0 #000,0 0 0 #0d0d0d;box-shadow:0 0 0 #000,0 0 0 #0d0d0d;background:#626262;border-radius:0;border:0 solid #010101}input[type=range]::-webkit-slider-thumb{-webkit-box-shadow:0 0 0 #000031,0 0 0 #00004b;box-shadow:0 0 0 #000031,0 0 0 #00004b;border:0 solid #000;height:10px;width:10px;border-radius:12px;background:#626262;cursor:pointer;-webkit-appearance:none;margin-top:-3px}input[type=range]:focus::-webkit-slider-runnable-track{background:#000}input[type=range]::-moz-range-track{width:100%;height:4px;cursor:pointer;box-shadow:0 0 0 #000,0 0 0 #0d0d0d;background:#626262;border-radius:0;border:0 solid #010101}input[type=range]::-moz-range-thumb{box-shadow:0 0 0 #000031,0 0 0 #00004b;border:0 solid #000;height:10px;width:10px;border-radius:12px;background:#626262;cursor:pointer}input[type=range]::-ms-track{width:100%;height:4px;cursor:pointer;background:transparent;border-color:transparent;color:transparent}input[type=range]::-ms-fill-lower,input[type=range]::-ms-fill-upper{background:#626262;border:0 solid #010101;border-radius:0;box-shadow:0 0 0 #000,0 0 0 #0d0d0d}input[type=range]::-ms-thumb{box-shadow:0 0 0 #000031,0 0 0 #00004b;border:0;height:10px;width:10px;border-radius:12px;background:#626262;cursor:pointer;height:4px}input[type=range]:focus::-ms-fill-lower,input[type=range]:focus::-ms-fill-upper{background:#626262}.order{background:url(../../pictures/form-bg.jpg) 50% no-repeat;background-size:cover}.order-form{display:-webkit-box;display:-ms-flexbox;display:flex;position:relative}@media screen and (max-width:768px){.order-form{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}}.form{margin-right:1.25rem;width:50%}@media screen and (max-width:768px){.form{width:100%;margin-right:0;padding:0 8rem}}@media screen and (max-width:480px){.form{padding:0}}.form:last-child{margin-right:0}.form__block-title{color:#fff}.form__input{border:1px solid transparent;border-radius:.3125rem;padding:.4375rem;width:100%;outline:none;-webkit-box-sizing:border-box;box-sizing:border-box}.form__input:focus{border-color:#f9b43b}.form__row{display:-webkit-box;display:-ms-flexbox;display:flex;margin-bottom:1.25rem}@media screen and (max-width:480px){.form__row{-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}}.form__block{-webkit-box-flex:1;-ms-flex:1;flex:1;margin-right:1.25rem}.form__block:last-child{margin-right:0}.form__block-textarea{border:none;border-radius:.1875rem;padding:.3125rem;width:100%;height:87%;resize:none;margin-bottom:1.875rem}.checkbox__label,.radio__controls,.radio__label{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.radio__label{position:relative;margin-left:1.25rem}.radio__label:first-child{margin-left:0}.radio__input{position:absolute;top:0;left:-624.9375rem}.radio__input-fake{width:.9375rem;height:.9375rem;background-color:#fff;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.radio__input-fake,.radio__input-fake:before{display:-webkit-box;display:-ms-flexbox;display:flex;border-radius:50%}.radio__input-fake:before{content:"";width:0;height:0;background-color:#e35028;-webkit-transition:.5s;transition:.5s}.checkbox__label-text,.radio__label-text{margin-left:.3125rem;font-family:ubuntulight;color:#fff}.radio__input:checked+.radio__input-fake:before{width:.4375rem;height:.4375rem}.checkbox__label{position:relative;padding-left:1.25rem;margin-bottom:1.25rem;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.checkbox__label input{position:absolute;opacity:0;cursor:pointer;height:0;width:0}.checkbox__input-fake{position:absolute;left:0;height:.9375rem;width:.9375rem;background-color:#fff;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.checkbox__input-fake:before{content:"";position:absolute;display:block;opacity:0;background:url(../../pictures/checkbox-mark.png);width:100%;height:100%;background-repeat:no-repeat;background-position:50% 50%}.checkbox__label:hover input~.checkbox__input-fake{background-color:#ccc}.checkbox__input:checked+.checkbox__input-fake:before{opacity:1}.popup{display:none;height:6.875rem;width:12.5rem;background-color:#fff;padding:1.25rem}.popup__message{color:#000;font-size:.875rem;font-family:ubuntulight;text-align:center}.popup_active{position:absolute;top:40%;left:30%;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;z-index:66}.contacts{position:relative}#map{height:100%;width:100%}.contacts-map{width:2.875rem;height:3.60794rem}.footer{position:absolute;bottom:0;background-color:#0f0f0f;width:100%;display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-line-pack:center;align-content:center;padding:.625rem 0}@media screen and (max-width:480px){.footer{padding:1.25rem 0}}.contacts-details{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center}@media screen and (max-width:480px){.contacts-details{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-ms-flex-line-pack:center;align-content:center}}.contacts-info{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}@media screen and (max-width:480px){.contacts-info{width:100%;-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin-bottom:.9375rem}}.contacts-info__text{font-family:ubuntulight;color:#fff;font-size:.875rem}.contacts-info__phone{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:baseline;-ms-flex-align:baseline;align-items:baseline;cursor:pointer}.contacts-info__icon{width:.6875rem;height:.6875rem}.contacts-info__number{font-family:ubuntubold;color:#e45028;margin-left:.4375rem}.socials{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end}@media screen and (max-width:480px){.socials{width:100%;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}}.socials__item{margin-left:1.25rem}.socials__item:first-child{margin-left:0}.socials__link{display:-webkit-box;display:-ms-flexbox;display:flex;cursor:pointer}.socials__icon{width:1.25rem;height:1.25rem;fill:#585858}.socials__icon:hover{fill:#fff}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */